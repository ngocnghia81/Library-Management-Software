<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>